//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Thrzn41.Util.ResourceMessage {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ErrorMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Thrzn41.Util.ResourceMessage.ErrorMessages", typeof(ErrorMessages).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to baseSpan is less than or equals 0..
        /// </summary>
        internal static string BaseSpanLessThanOrEqualsZero {
            get {
                return ResourceManager.GetString("BaseSpanLessThanOrEqualsZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to byteLength is less than 0..
        /// </summary>
        internal static string ByteLengthLessThanZero {
            get {
                return ResourceManager.GetString("ByteLengthLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to charLength is less than 0..
        /// </summary>
        internal static string CharLengthLessThanZero {
            get {
                return ResourceManager.GetString("CharLengthLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied DateTime represents an invalid time..
        /// </summary>
        internal static string InvalidDateTime {
            get {
                return ResourceManager.GetString("InvalidDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to maxValue is less than 0..
        /// </summary>
        internal static string MaxValueLessThanZero {
            get {
                return ResourceManager.GetString("MaxValueLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to minDiff is less than 0..
        /// </summary>
        internal static string MinDiffLessThanZero {
            get {
                return ResourceManager.GetString("MinDiffLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to minDiff is too large..
        /// </summary>
        internal static string MinDiffTooLarge {
            get {
                return ResourceManager.GetString("MinDiffTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TimeZone id &apos;{0}&apos; is not found..
        /// </summary>
        internal static string TimeZondIdNotFound {
            get {
                return ResourceManager.GetString("TimeZondIdNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TimeZoneInfo for id &apos;{0}&apos; is not found..
        /// </summary>
        internal static string TimeZoneInfoNotFoundForId {
            get {
                return ResourceManager.GetString("TimeZoneInfoNotFoundForId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uri scheme is not https or http..
        /// </summary>
        internal static string UriSchemeIsNotHttpsOrHttp {
            get {
                return ResourceManager.GetString("UriSchemeIsNotHttpsOrHttp", resourceCulture);
            }
        }
    }
}
